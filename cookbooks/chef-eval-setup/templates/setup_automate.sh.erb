#!/bin/bash

GUEST_WKDIR=$1
apt-get update && apt-get install -y unzip ntp jq

if [ ! -f ${GUEST_WKDIR}/a2-token ]; then
  echo "Configuring sysctl.."
  sysctl -w vm.max_map_count=262144
  sysctl -w vm.dirty_expire_centisecs=20000

  echo "Configuring /etc/hosts.."
  echo <%= @a2_ip %> automate-deployment.test | sudo tee -a /etc/hosts
  echo "Downloading Automate.."
  cd /home/vagrant && curl -s https://packages.chef.io/files/current/automate/latest/chef-automate_linux_amd64.zip |gunzip - > chef-automate && chmod +x chef-automate
  echo "Installing Automate.."
  sudo ./chef-automate init-config
  sudo ./chef-automate deploy config.toml --accept-terms-and-mlsa --skip-preflight > ${GUEST_WKDIR}/logs/automate.deploy.log 2>&1
  if [ -f ${GUEST_WKDIR}/automate.license ]; then
    echo "Adding custom license.."
    sudo ./chef-automate license apply $(< ${GUEST_WKDIR}/automate.license) && sudo ./chef-automate license status
  fi

  echo "Updating admin password.."
  ADMIN_TOKEN=`./chef-automate admin-token`
  ADMIN_ID=`curl -k -H  "api-token: $ADMIN_TOKEN" https://localhost/api/v0/auth/users/admin | jq '.id'`
  curl -k -X PUT -H "api-token: $ADMIN_TOKEN" -H "Content-Type: application/json" -d '{"name":"admin", "password":"automate!", "id": "$AMDIN_ID"}' https://localhost/api/v0/auth/users/admin

  echo "Store admin token for other uses.."
  sudo ./chef-automate admin-token > ${GUEST_WKDIR}/a2-token
fi
